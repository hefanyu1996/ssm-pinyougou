<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security.xsd">

<!--
    &lt;!&ndash; 配置不过滤的资源（静态资源及登录相关） &ndash;&gt;
    <security:http pattern="/*.html" security="none"/>
    <security:http pattern="/css/**" security="none"/>
    <security:http pattern="/img/**" security="none"/>
    <security:http pattern="/js/**" security="none"/>
    <security:http pattern="/plugins/**" security="none"/>

    &lt;!&ndash; 页面拦截规则 &ndash;&gt;
    <security:http use-expressions="false">
        <security:intercept-url pattern="/**" access="ROLE_ADMIN,ROLE_USER"/>
        <security:form-login login-page="/login.html" default-target-url="/admin/index.html"
                             authentication-failure-url="/login.html" always-use-default-target="true"/>
        <security:csrf disabled="true"/>
        <security:headers>
            <security:frame-options policy="SAMEORIGIN"/>
        </security:headers>
    </security:http>

    &lt;!&ndash; 认证管理器 &ndash;&gt;
    <security:authentication-manager>
        <security:authentication-provider>
            <security:user-service>
                <security:user name="admin" password="{noop}admin" authorities="ROLE_ADMIN"/>
                <security:user name="user" password="{noop}user" authorities="ROLE_USER"/>
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>
    -->


        <!-- 配置不过滤的资源（静态资源及登录相关） -->
        <security:http pattern="/*.html" security="none"/>
        <security:http pattern="/css/**" security="none"/>
        <security:http pattern="/img/**" security="none"/>
        <security:http pattern="/js/**" security="none"/>
        <security:http pattern="/plugins/**" security="none"/>


        <security:http use-expressions="false">
            <!-- 配置资料连接，表示任意路径都需要ROLE_USER权限 -->
            <security:intercept-url pattern="/**" access="ROLE_USER,ROLE_ADMIN"/>
            <!-- 自定义登陆页面，login-page 自定义登陆页面 authentication-failure-url 用户权限校验失败之
            后才会跳转到这个页面，如果数据库中没有这个用户则不会跳转到这个页面。
            default-target-url 登陆成功后跳转的页面。 注：登陆页面用户名固定 username，密码
            password，action:login -->
            <security:form-login login-page="/login.html"
                                 login-processing-url="/login.do" username-parameter="username" password-parameter="password"
                                 default-target-url="/admin/index.html"
                                 authentication-failure-url="/login.html"
                                 authentication-success-forward-url="/admin/index.html"
            />
            <!-- 登出， invalidate-session 是否删除session logout-url：登出处理链接 logout-successurl：登出成功页面
            注：登出操作 只需要链接到 logout即可登出当前用户 -->
            <security:logout invalidate-session="true" logout-url="/logout.do" logout-success-url="/login.html"/>
            <!-- 关闭CSRF,默认是开启的 -->
            <security:csrf disabled="true"/>

            <security:headers>
                <security:frame-options policy="SAMEORIGIN" />
            </security:headers>
        </security:http>

        <!-- 配置加密类 -->
        <!--<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>-->

        <security:authentication-manager>
            <security:authentication-provider ><!--user-service-ref="userService"-->
                <security:user-service>
                    <security:user name="user" password="user"
                                   authorities="ROLE_USER" />
                    <security:user name="admin" password="admin"
                                   authorities="ROLE_ADMIN" />
                </security:user-service>

                <!-- 声明加密方式 -->
                <!--<security:password-encoder ref="passwordEncoder"/>-->
            </security:authentication-provider>
        </security:authentication-manager>


</beans>
